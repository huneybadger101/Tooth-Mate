{"version":3,"file":"primitive-node.js","sourceRoot":"","sources":["../../../../src/features/scene-graph/nodes/primitive-node.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Material as ThreeMaterial, Mesh} from 'three';\nimport {GLTFReference} from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nimport {CorrelatedSceneGraph} from '../../../three-components/gltf-instance/correlated-scene-graph.js';\nimport {KHRMaterialsVariants, Primitive} from '../../../three-components/gltf-instance/gltf-2.0.js';\nimport {UserDataVariantMapping} from '../../../three-components/gltf-instance/VariantMaterialLoaderPlugin.js';\nimport {$getLoadedMaterial, $variantIndices, Material} from '../material.js';\nimport {VariantData} from '../model.js';\nimport {$correlatedObjects} from '../three-dom-element.js';\n\n// Defines the base level node methods and data.\nexport class Node {\n  name: string = '';\n  children = new Array<Node>();\n  constructor(name: string) {\n    this.name = name;\n  }\n}\n\n// Represents a primitive in a glTF mesh.\nexport class PrimitiveNode extends Node {\n  public mesh: Mesh;\n  // Maps glTF material index number to a material that this primitive supports.\n  public materials = new Map<number, Material>();\n  // Maps variant index to material.\n  private variantToMaterialMap = new Map<number, Material>();\n  public initialMaterialIdx = 0;\n  private activeMaterialIdx = 0;\n  private modelVariants: Map<string, VariantData>;\n\n  constructor(\n      mesh: Mesh, mvMaterials: Material[],\n      modelVariants: Map<string, VariantData>,\n      correlatedSceneGraph: CorrelatedSceneGraph) {\n    super(mesh.name);\n    this.mesh = mesh;\n    const {gltf, threeGLTF, threeObjectMap} = correlatedSceneGraph;\n    this.modelVariants = modelVariants;\n    this.mesh.userData.variantData = modelVariants;\n    // Captures the primitive's initial material.\n    const materialMappings =\n        threeObjectMap.get(mesh.material as ThreeMaterial)!;\n    if (materialMappings.materials != null) {\n      this.initialMaterialIdx = this.activeMaterialIdx =\n          materialMappings.materials;\n    } else {\n      console.error(\n          `Primitive (${mesh.name}) missing initial material reference.`);\n    }\n\n    // Gets the mesh index from the node.\n    const associations =\n        (mesh.userData.associations as GLTFReference & {primitives: number}) ||\n        {};\n\n    if (associations.meshes == null) {\n      console.error('Mesh is missing primitive index association');\n      return;\n    }\n    // The gltf mesh array to sample from.\n    const meshElementArray = gltf['meshes'] || [];\n    // List of primitives under the mesh.\n    const gltfPrimitives =\n        (meshElementArray[associations.meshes].primitives || []) as Primitive[];\n\n    const gltfPrimitive = gltfPrimitives[associations.primitives];\n    if (gltfPrimitive == null) {\n      console.error('Mesh primitive definition is missing.');\n      return;\n    }\n\n    // Maps the gltfPrimitive default to a material.\n    if (gltfPrimitive.material != null) {\n      this.materials.set(\n          gltfPrimitive.material, mvMaterials[gltfPrimitive.material]);\n    } else {\n      const defaultIdx = mvMaterials.findIndex((mat: Material) => {\n        return mat.name === 'Default';\n      });\n      if (defaultIdx >= 0) {\n        this.materials.set(defaultIdx, mvMaterials[defaultIdx]);\n      } else {\n        console.warn('gltfPrimitive has no material!');\n      }\n    }\n\n    if (gltfPrimitive.extensions &&\n        gltfPrimitive.extensions['KHR_materials_variants']) {\n      const variantsExtension =\n          gltfPrimitive.extensions['KHR_materials_variants'] as\n          KHRMaterialsVariants;\n      const extensions = threeGLTF.parser.json.extensions;\n      const variantNames = extensions['KHR_materials_variants'].variants;\n      // Provides definition now that we know there are variants to\n      // support.\n      for (const mapping of variantsExtension.mappings) {\n        const mvMaterial = mvMaterials[mapping.material];\n        // Maps variant indices to Materials.\n        this.materials.set(mapping.material, mvMaterial);\n        for (const variant of mapping.variants) {\n          const {name} = variantNames[variant];\n          this.variantToMaterialMap.set(variant, mvMaterial);\n          // Provides variant info for material self lookup.\n          mvMaterial[$variantIndices]().add(variant);\n          // Updates the models variant data.\n          if (!modelVariants.has(name)) {\n            modelVariants.set(name, {name, index: variant} as VariantData);\n          }\n        }\n      }\n    }\n  }\n\n  async setActiveMaterial(material: number): Promise<ThreeMaterial|null> {\n    const mvMaterial = this.materials.get(material);\n    if (mvMaterial != null) {\n      this.mesh.material = await mvMaterial[$getLoadedMaterial]();\n      this.activeMaterialIdx = material;\n    }\n    return this.mesh.material as ThreeMaterial;\n  }\n\n  getActiveMaterial(): Material {\n    return this.materials.get(this.activeMaterialIdx)!;\n  }\n\n  getMaterial(index: number): Material|undefined {\n    return this.materials.get(index);\n  }\n\n  async enableVariant(name: string|null): Promise<ThreeMaterial|null> {\n    if (name == null) {\n      return this.setActiveMaterial(this.initialMaterialIdx);\n    }\n    if (this.variantToMaterialMap != null && this.modelVariants.has(name)) {\n      const modelVariants = this.modelVariants.get(name)!;\n      return this.enableVariantHelper(modelVariants.index);\n    }\n    return null;\n  }\n\n  private async enableVariantHelper(index: number|\n                                    null): Promise<ThreeMaterial|null> {\n    if (this.variantToMaterialMap != null && index != null) {\n      const material = this.variantToMaterialMap.get(index);\n      if (material != null) {\n        return this.setActiveMaterial(material.index);\n      }\n    }\n    return null;\n  }\n\n  async instantiateVariants() {\n    if (this.variantToMaterialMap == null) {\n      return;\n    }\n    for (const index of this.variantToMaterialMap.keys()) {\n      const variantMaterial = this.mesh.userData.variantMaterials.get(index) as\n          UserDataVariantMapping;\n      if (variantMaterial.material != null) {\n        continue;\n      }\n      const threeMaterial = await this.enableVariantHelper(index);\n      if (threeMaterial != null) {\n        variantMaterial.material = threeMaterial;\n      }\n    }\n  }\n\n  get variantInfo() {\n    return this.variantToMaterialMap;\n  }\n\n  addVariant(materialVariant: Material, variantName: string) {\n    if (!this.ensureVariantIsUnused(variantName)) {\n      return false;\n    }\n\n    // Adds the variant to the model variants if needed.\n    if (!this.modelVariants.has(variantName)) {\n      this.modelVariants.set(\n          variantName, {name: variantName, index: this.modelVariants.size});\n    }\n    const modelVariantData = this.modelVariants.get(variantName)!;\n    const variantIndex = modelVariantData.index;\n\n    // Updates materials mapped to the variant.\n    materialVariant[$variantIndices]().add(variantIndex);\n\n    // Updates internal mappings.\n    this.variantToMaterialMap.set(variantIndex, materialVariant);\n    this.materials.set(materialVariant.index, materialVariant);\n\n    this.updateVariantUserData(variantIndex, materialVariant);\n\n    return true;\n  }\n\n  deleteVariant(variantIndex: number) {\n    if (this.variantInfo.has(variantIndex)) {\n      this.variantInfo.delete(variantIndex);\n\n      const userDataMap = this.mesh.userData.variantMaterials! as\n          Map<number, UserDataVariantMapping>;\n      if (userDataMap != null) {\n        userDataMap.delete(variantIndex);\n      }\n    }\n  }\n\n  private updateVariantUserData(\n      variantIndex: number, materialVariant: Material) {\n    // Adds variants name to material variants set.\n    materialVariant[$variantIndices]().add(variantIndex);\n\n    this.mesh.userData.variantData = this.modelVariants;\n    // Updates import data (see VariantMaterialLoaderPlugin.ts).\n    this.mesh.userData.variantMaterials = this.mesh.userData.variantMaterials ||\n        new Map<number, UserDataVariantMapping>();\n    const map = this.mesh.userData.variantMaterials! as\n        Map<number, UserDataVariantMapping>;\n    map.set(variantIndex, {\n      material: materialVariant[$correlatedObjects]!.values().next().value,\n      gltfMaterialIndex: materialVariant.index,\n    });\n  }\n\n  private ensureVariantIsUnused(variantName: string) {\n    const modelVariants = this.modelVariants.get(variantName);\n\n    if (modelVariants != null && this.variantInfo.has(modelVariants!.index)) {\n      console.warn(`Primitive cannot add variant '${\n          variantName}' for this material, it already exists.`);\n      return false;\n    }\n\n    return true;\n  }\n}\n"]}